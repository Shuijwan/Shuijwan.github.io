<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-01-14T23:13:42+08:00</updated><id>http://localhost:4000//</id><title type="html">王水军的博客</title><subtitle>主营Android(UI, Framework)，Java, 其他的都是半吊子(React Native, Linux, security, c/c++ ...), 想了解高端的Machine Learing, AI, TensorFlow，但是懒又是零基础
</subtitle><entry><title type="html">基于Flexbox的布局框架(一)</title><link href="http://localhost:4000/android/ui/2017/01/14/%E5%9F%BA%E4%BA%8EFlexbox%E7%9A%84%E5%B8%83%E5%B1%80%E6%A1%86%E6%9E%B6(-).html" rel="alternate" type="text/html" title="基于Flexbox的布局框架(一)" /><published>2017-01-14T10:34:01+08:00</published><updated>2017-01-14T10:34:01+08:00</updated><id>http://localhost:4000/android/ui/2017/01/14/%E5%9F%BA%E4%BA%8EFlexbox%E7%9A%84%E5%B8%83%E5%B1%80%E6%A1%86%E6%9E%B6(-)</id><content type="html" xml:base="http://localhost:4000/android/ui/2017/01/14/%E5%9F%BA%E4%BA%8EFlexbox%E7%9A%84%E5%B8%83%E5%B1%80%E6%A1%86%E6%9E%B6(-).html">&lt;p&gt;在移动开发过程中，我们常常会碰到以下痛点:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;android与ios两端实现的视觉效果常常不一致，导致视觉走查花费大量时间&lt;/li&gt;
    &lt;li&gt;ui实现过程中，常常需要写很多冗长无聊的代码，很多代码也不能复用，
当项目复杂到一定程度，随着业务和开发人员的增加，项目也会到达一个不容易维护的状态，代码质量也很难保证&lt;/li&gt;
    &lt;li&gt;当ui需求变动时，需要重新发版本&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;这个时候最好是有一个框架能将这些重复的工作给代劳，既提高了开发的效率，也保证了项目的质量.&lt;/p&gt;

&lt;p&gt;针对上面提到的问题，相应的，这个框架就需要：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;ui的布局两端能统一，两端都遵循同一套标准，甚至能共用同一套布局文件(相应的有一个ios的实现)&lt;/li&gt;
  &lt;li&gt;ui布局能够支持服务端下发来满足动态性&lt;/li&gt;
  &lt;li&gt;ui布局必须高效，有native体验&lt;/li&gt;
  &lt;li&gt;能够处理基本的动画以及业务逻辑&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;话说React Native, Weex等跨平台一整套方案应该能很好地解决上述问题，不过感觉目前还是有很多坑要踩，而且貌似在低端机型上性能还是个问题,
相信背靠Facebook和阿里，而且随着手机性能的不断提升，未来几年真的很有可能会一统三端.&lt;/p&gt;

&lt;p&gt;这个框架主要是为了解决UI展示的问题，兼顾了一定的业务逻辑能力，在实现过程中也受到了React Native, Weex的启发，尤其是Facebook的这篇文章&lt;a href=&quot;https://code.facebook.com/posts/531104390396423/components-for-android-a-declarative-framework-for-efficient-uis/&quot;&gt;components-for-android-a-declarative-framework-for-efficient-uis&lt;/a&gt;，要是Facebook开源了这个框架的话，估计我就直接在它上面改改了。&lt;/p&gt;

&lt;p&gt;后续会分几篇来分别讲述这个框架实现的主要部分:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;基于Flexbox的布局框架(二) - Flexbox布局&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;基于Flexbox的布局框架(三) - 异步Layout&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;基于Flexbox的布局框架(四) - 文本渲染&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;基于Flexbox的布局框架(五) - Image渲染&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;基于Flexbox的布局框架(六) - List&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;基于Flexbox的布局框架(七) - 数据绑定&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;基于Flexbox的布局框架(八) - 事件处理&lt;/a&gt;&lt;/p&gt;</content><summary type="html">在移动开发过程中，我们常常会碰到以下痛点:</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2017/01/14/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-01-14T10:34:01+08:00</published><updated>2017-01-14T10:34:01+08:00</updated><id>http://localhost:4000/jekyll/update/2017/01/14/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/01/14/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>
